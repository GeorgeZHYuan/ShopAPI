{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0.0",
    "title" : "Shopify Developer Challenge API"
  },
  "host" : "http://eminent-expanse-216713.appspot.com",
  "basePath" : "/api/v1",
  "tags" : [ {
    "name" : "account",
    "description" : "Operations on accounts"
  }, {
    "name" : "shop",
    "description" : "Operations on shops"
  }, {
    "name" : "product",
    "description" : "Operations on products"
  }, {
    "name" : "lineItem",
    "description" : "Operations on lineItems"
  }, {
    "name" : "order",
    "description" : "Operations on orders"
  }, {
    "name" : "orderItem",
    "description" : "Operations on orderItems"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/accounts" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "Search accounts",
        "description" : "Search accounts. Select values and filter fields for sting patterns",
        "operationId" : "findAccounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Select fields to be returned from account.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "default" : "available",
            "enum" : [ "id", "username", "email", "password" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Accounts id considered for filter",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Emails considered for filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "Usernames considered for filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "Passwords considered for filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Page start number",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int64"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Items per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sort items by",
          "required" : false,
          "type" : "string",
          "default" : "id",
          "enum" : [ "id", "username", "email", "password" ]
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort method",
          "required" : false,
          "type" : "string",
          "default" : "asc",
          "enum" : [ "asc", "desc" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Account"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Create account",
        "description" : "Create a user account",
        "operationId" : "createAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Account fields. An email, username and password must be provided. Id field here is ignored and will be auto generated in the db.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Account"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successfullly created account"
          }
        }
      }
    },
    "/accounts/{accountId}" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "get single account by id",
        "description" : "get single account by id",
        "operationId" : "getSingleAccount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Id of account",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "account" ],
        "summary" : "Update account",
        "description" : "Update account info. Only filled in fields will change in account.",
        "operationId" : "updateAccount",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Id of account",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "username",
          "in" : "formData",
          "description" : "change username",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "formData",
          "description" : "change email",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "change password",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successfullly updated account"
          }
        }
      },
      "delete" : {
        "tags" : [ "account" ],
        "summary" : "Delete account",
        "description" : "Delete account by id",
        "operationId" : "deleteAccount",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Id of account",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "successfullly deleted account"
          }
        }
      }
    },
    "/accounts/{accountId}/shops" : {
      "get" : {
        "tags" : [ "shop" ],
        "summary" : "Search Shops",
        "description" : "Search Shops. Select values and filter fields for string patterns",
        "operationId" : "findShops",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Id of shop owner",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Select fields to be returned from shop.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "default" : "available",
            "enum" : [ "id", "ownerId", "name" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Accounts id considered for filter",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "ownerId",
          "in" : "query",
          "description" : "Shop id considered for filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Shop name considered for filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Page start number",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int64"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Items per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sort items by",
          "required" : false,
          "type" : "string",
          "default" : "id",
          "enum" : [ "id", "ownerId", "name" ]
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort method",
          "required" : false,
          "type" : "string",
          "default" : "asc",
          "enum" : [ "asc", "desc" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Shop"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "shop" ],
        "summary" : "Create shop",
        "description" : "Create a shop",
        "operationId" : "createShop",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Id of shop owner",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Shop fields. An ownerId and unique name must be provided. The Id field here is ignored and will be auto generated in the db.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Shop"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successfullly created shop"
          }
        }
      }
    },
    "/accounts/{accountId}/shops/{shopId}" : {
      "get" : {
        "tags" : [ "shop" ],
        "summary" : "get single shop by id",
        "description" : "get single shop by id",
        "operationId" : "getSingleShop",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Id of account",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "shopId",
          "in" : "path",
          "description" : "Id of shop",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "shop" ],
        "summary" : "Update shop",
        "description" : "Update shop info. Only filled in fields will change in shop.",
        "operationId" : "updateShop",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Id of account",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "shopId",
          "in" : "path",
          "description" : "Id of shop",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "ownerId",
          "in" : "query",
          "description" : "Id of owner",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "change name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successfullly updated account"
          }
        }
      },
      "delete" : {
        "tags" : [ "shop" ],
        "summary" : "Delete shop",
        "description" : "Delete shop by id",
        "operationId" : "deleteShop",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Id of account",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "shopId",
          "in" : "path",
          "description" : "Id of shop",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "successfullly deleted shop"
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "Search products",
        "description" : "Search products. Select values and filter fields for sting patterns",
        "operationId" : "findProducts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Select fields to be returned from product.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "default" : "available",
            "enum" : [ "id", "name", "lineItemId" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Product id considered for filter",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Name considered for filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lineItemId",
          "in" : "query",
          "description" : "Lineitem ids considered for filter",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Page start number",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int64"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Items per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sort items by",
          "required" : false,
          "type" : "string",
          "default" : "id",
          "enum" : [ "id", "name", "lineItemId" ]
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort method",
          "required" : false,
          "type" : "string",
          "default" : "asc",
          "enum" : [ "asc", "desc" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Product"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "product" ],
        "summary" : "Create product",
        "description" : "Create a product",
        "operationId" : "createProduct",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "product fields. A unique name and lineitem id must be provided. Id field here is ignored and will be auto generated in the db.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Product"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successfullly created prodcut"
          }
        }
      }
    },
    "/products/{productId}" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "get single product by id",
        "description" : "get single product by id",
        "operationId" : "getSingleProduct",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "product" ],
        "summary" : "Update product",
        "description" : "Update product info. Only filled in fields will change in product.",
        "operationId" : "updateProduct",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "formData",
          "description" : "change product name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lineItemId",
          "in" : "formData",
          "description" : "Id of lineitem id",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successfullly updated product"
          }
        }
      },
      "delete" : {
        "tags" : [ "product" ],
        "summary" : "Delete product",
        "description" : "Delete product by id",
        "operationId" : "deleteProduct",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "successfullly deleted product"
          }
        }
      }
    },
    "/products/{productId}/lineItems" : {
      "get" : {
        "tags" : [ "lineItem" ],
        "summary" : "Search lineItem",
        "description" : "Search lineItem. Select values and filter fields for string patterns",
        "operationId" : "findLineItem",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Select fields to be returned from shop.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "default" : "available",
            "enum" : [ "id", "shopId", "name", "amount", "price" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "LineItem id considered for filter",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "shopId",
          "in" : "query",
          "description" : "Shop id considered for filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "LineItems name considered for filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "query",
          "description" : "Shop id considered for filter",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "price",
          "in" : "query",
          "description" : "Shop id considered for filter",
          "required" : false,
          "type" : "number",
          "format" : "float"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Page start number",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int64"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Items per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int64"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Sort items by",
          "required" : false,
          "type" : "string",
          "default" : "id",
          "enum" : [ "id", "ownerId", "name" ]
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sort method",
          "required" : false,
          "type" : "string",
          "default" : "asc",
          "enum" : [ "asc", "desc" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LineItem"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "lineItem" ],
        "summary" : "Create LineItems",
        "description" : "Create a LineItem",
        "operationId" : "createLineItems",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Shop fields. All fields must be provided. The Id field here is ignored and will be auto generated in the db.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LineItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successfullly created shop"
          }
        }
      }
    },
    "/products/{productId}/lineItems/{lineItemId}" : {
      "get" : {
        "tags" : [ "lineItem" ],
        "summary" : "get single lineItem by id",
        "description" : "get single lineItem by id",
        "operationId" : "getSingleLineItem",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lineItemId",
          "in" : "path",
          "description" : "Id of lineItem",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "lineItem" ],
        "summary" : "Update shop",
        "description" : "Update shop info. Only filled in fields will change in shop.",
        "operationId" : "updateLineItem",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lineItemId",
          "in" : "path",
          "description" : "Id of lineItem",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "ownerId",
          "in" : "query",
          "description" : "Id of owner",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "LineItems name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "query",
          "description" : "LineItems amount",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "price",
          "in" : "query",
          "description" : "LineItems price",
          "required" : false,
          "type" : "number",
          "format" : "float"
        } ],
        "responses" : {
          "200" : {
            "description" : "successfullly updated account"
          }
        }
      },
      "delete" : {
        "tags" : [ "lineItem" ],
        "summary" : "Delete lineItem",
        "description" : "Delete lineItem by id",
        "operationId" : "deleteLineItem",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "productId",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lineItemId",
          "in" : "path",
          "description" : "Id of lineItem",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "successfullly deleted lineItem."
          }
        }
      }
    },
    "/orders" : {
      "get" : {
        "tags" : [ "order" ],
        "summary" : "Search order",
        "description" : "Search order. Select values and filter fields for string patterns",
        "operationId" : "findOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Order"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "order" ],
        "summary" : "Create LineItems",
        "description" : "Create a LineItem",
        "operationId" : "createOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "201" : {
            "description" : "successfullly created shop"
          }
        }
      }
    },
    "/orders/{orderId}" : {
      "get" : {
        "tags" : [ "order" ],
        "summary" : "get single order by id",
        "description" : "get single order by id",
        "operationId" : "getSingleOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Id of order",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "order" ],
        "summary" : "Update order",
        "description" : "Update order info. Only filled in fields will change in shop.",
        "operationId" : "updateOrder",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Id of order",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successfullly updated account"
          }
        }
      },
      "delete" : {
        "tags" : [ "order" ],
        "summary" : "Delete order",
        "description" : "Delete order by id",
        "operationId" : "deleteOrder",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Id of order",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "successfullly deleted order."
          }
        }
      }
    },
    "/orders/{orderId}/orderItems" : {
      "get" : {
        "tags" : [ "orderItem" ],
        "summary" : "Search orderItem",
        "description" : "Search orderItem. Select values and filter fields for string patterns",
        "operationId" : "findOrderItem",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Id of product",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LineItem"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "orderItem" ],
        "summary" : "Create orderItem",
        "description" : "Create a orderItem",
        "operationId" : "createOrderItem",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Id of OrderItem",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Shop fields. All fields must be provided. The Id field here is ignored and will be auto generated in the db.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrderItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successfullly created shop"
          }
        }
      }
    },
    "/orders/{orderId}/orderItems/{orderItemId}" : {
      "get" : {
        "tags" : [ "orderItem" ],
        "summary" : "get single orderItem by id",
        "description" : "get single orderItem by id",
        "operationId" : "getSingleOrderItem",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Id of order",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "orderItemId",
          "in" : "path",
          "description" : "Id of orderItem",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "tags" : [ "orderItem" ],
        "summary" : "Update orderItem",
        "description" : "Update orderItem info. Only filled in fields will change in orderItem.",
        "operationId" : "updateOrderItem",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Id of order",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "orderItemId",
          "in" : "path",
          "description" : "Id of orderItem",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successfullly updated account"
          }
        }
      },
      "delete" : {
        "tags" : [ "orderItem" ],
        "summary" : "Delete lineItem",
        "description" : "Delete lineItem by id",
        "operationId" : "deleteOrderItem",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Id of order",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "orderItemId",
          "in" : "path",
          "description" : "Id of orderItem",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "successfullly deleted order."
          }
        }
      }
    }
  },
  "definitions" : {
    "Account" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "username" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Account"
      },
      "example" : {
        "password" : "password",
        "id" : 0,
        "email" : "email",
        "username" : "username"
      }
    },
    "Shop" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ownerId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Shop"
      },
      "example" : {
        "name" : "name",
        "id" : 0,
        "ownerId" : 6
      }
    },
    "Product" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lineItemId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Product"
      },
      "example" : {
        "lineItemId" : 6,
        "name" : "name",
        "id" : 0
      }
    },
    "LineItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "productId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "shopId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "price" : {
          "type" : "number",
          "format" : "float"
        }
      },
      "xml" : {
        "name" : "Shop"
      },
      "example" : {
        "amount" : 5,
        "productId" : 6,
        "price" : 5.637377,
        "name" : "name",
        "id" : 0,
        "shopId" : 1
      }
    },
    "Order" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "accountId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        },
        "price" : {
          "type" : "number",
          "format" : "float"
        }
      },
      "xml" : {
        "name" : "LineItem"
      },
      "example" : {
        "accountId" : 6,
        "price" : 1.4658129,
        "id" : 0,
        "status" : "status"
      }
    },
    "OrderItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "orderId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ownerId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "buyerId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lineItemId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lineItemName" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "price" : {
          "type" : "number",
          "format" : "float"
        }
      },
      "xml" : {
        "name" : "OrderItem"
      },
      "example" : {
        "amount" : 2,
        "orderId" : 6,
        "lineItemId" : 5,
        "lineItemName" : "lineItemName",
        "price" : 7.0614014,
        "id" : 0,
        "ownerId" : 1,
        "buyerId" : 5
      }
    }
  }
}
